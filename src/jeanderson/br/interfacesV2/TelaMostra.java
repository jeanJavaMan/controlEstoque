/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jeanderson.br.interfacesV2;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jeanderson.br.interfaces.TelaDetalhe;
import jeanderson.br.main.Main;
import jeanderson.br.produtos.Produto;

/**
 *
 * @author Sammy Guergachi <sguergachi at gmail.com>
 */
public class TelaMostra extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo;
    private boolean mostrou = false;
    private static int posicao;
    private boolean clicou = false;
    private Main main;

    /**
     * Creates new form TelaMostra
     */
    public TelaMostra() {
        initComponents();
        setSize(850, 548);
        camposOcultos();
        main = new Main();
    }

    public void preencherTabela() {
        int contador = 0;
        modelo = (DefaultTableModel) jtEstoque.getModel();
        limparTabela();
        for (Produto recebe : main.getEstoque()) {
            modelo.addRow(new String[]{Integer.toString(contador), recebe.getNome(), Integer.toString(recebe.getQuantidade()), Double.toString(recebe.getValor())});
            contador++;
        }
    }

    private void camposOcultos() {
        jlMinimo.setVisible(false);
        txtMinimo.setVisible(false);
        jlX.setVisible(false);
        jlMaximo.setVisible(false);
        txtMaximo.setVisible(false);
        btnGerar.setVisible(false);
        btnExcluir.setVisible(false);
        btnDescricao.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcTipoDePesquisa = new javax.swing.JComboBox();
        jlNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jlMinimo = new javax.swing.JLabel();
        txtMinimo = new javax.swing.JTextField();
        jlX = new javax.swing.JLabel();
        jlMaximo = new javax.swing.JLabel();
        txtMaximo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtEstoque = new javax.swing.JTable();
        btnDescricao = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnGerar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Meu Estoque");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tipo de Pesquisa:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(56, 17, 96, 15);

        jcTipoDePesquisa.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "ID", "Valor", "Quantidade" }));
        jcTipoDePesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTipoDePesquisaActionPerformed(evt);
            }
        });
        getContentPane().add(jcTipoDePesquisa);
        jcTipoDePesquisa.setBounds(156, 15, 81, 20);

        jlNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlNome.setText("Nome:");
        getContentPane().add(jlNome);
        jlNome.setBounds(246, 15, 90, 17);
        getContentPane().add(txtNome);
        txtNome.setBounds(300, 11, 352, 28);

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(btnPesquisar);
        btnPesquisar.setBounds(691, 11, 89, 25);

        btnMostrar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMostrar.setText("Mostrar Estoque");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMostrar);
        btnMostrar.setBounds(640, 45, 140, 25);

        jlMinimo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlMinimo.setText("Minimo:");
        getContentPane().add(jlMinimo);
        jlMinimo.setBounds(249, 49, 47, 17);
        getContentPane().add(txtMinimo);
        txtMinimo.setBounds(300, 45, 81, 29);

        jlX.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlX.setText("X");
        getContentPane().add(jlX);
        jlX.setBounds(410, 49, 8, 17);

        jlMaximo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jlMaximo.setText("Máximo:");
        getContentPane().add(jlMaximo);
        jlMaximo.setBounds(446, 49, 52, 17);
        getContentPane().add(txtMaximo);
        txtMaximo.setBounds(502, 45, 101, 29);

        jtEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Quantidade", "Valor(R$)"
            }
        ));
        jtEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtEstoqueMouseClicked(evt);
            }
        });
        jtEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtEstoqueKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtEstoque);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(56, 80, 724, 323);

        btnDescricao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDescricao.setText("Ver Descrição do Produto");
        btnDescricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescricaoActionPerformed(evt);
            }
        });
        getContentPane().add(btnDescricao);
        btnDescricao.setBounds(570, 420, 210, 25);

        btnExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir Produto");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        getContentPane().add(btnExcluir);
        btnExcluir.setBounds(390, 420, 140, 25);

        btnGerar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGerar.setText("Adicionar Nota");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGerar);
        btnGerar.setBounds(230, 420, 130, 25);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jeanderson/br/imagens/4.jpg"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 840, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDescricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescricaoActionPerformed
        TelaDetalhe td = new TelaDetalhe(null, rootPaneCheckingEnabled, Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), 0).toString()));
        td.setResizable(false);
        td.setLocationRelativeTo(null);
        td.setVisible(true);
    }//GEN-LAST:event_btnDescricaoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        int confirmacao = JOptionPane.showConfirmDialog(rootPane, "Tem Certeza que deseja Excluir este produto?");
        if(confirmacao == 0){
            main.getEstoque().remove(Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), 0).toString()));
            modelo.removeRow(Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), 0).toString()));
            main.atualizarBanco();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
        int linha = jtEstoque.getSelectedRow();
        String id = jtEstoque.getValueAt(linha, 0).toString();
        String produto = jtEstoque.getValueAt(linha, 1).toString();
        String quantidade = JOptionPane.showInputDialog("Quantidade de Produtos");
        String valor = jtEstoque.getValueAt(linha, 3).toString();
        if (Integer.parseInt(quantidade) > Integer.parseInt(jtEstoque.getValueAt(linha, 2).toString())) {
            JOptionPane.showMessageDialog(rootPane, "Não há essa quantidade em estoque", "ERRO", JOptionPane.ERROR_MESSAGE);
            return;
        }
        jtEstoque.setValueAt((Integer.parseInt(jtEstoque.getValueAt(linha, 2).toString()) - Integer.parseInt(quantidade)), linha, 2);
        main.abrirTelaNotas(id, produto, quantidade, valor);
        main.getEstoque().get(linha).setQuantidade(Integer.parseInt(jtEstoque.getValueAt(linha, 2).toString()));
    }//GEN-LAST:event_btnGerarActionPerformed

    private void jcTipoDePesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTipoDePesquisaActionPerformed
        switch (jcTipoDePesquisa.getSelectedIndex()) {
            case 0:
                txtNome.setSize(352, 28);
                jlNome.setText("Nome:");
                txtNome.setVisible(true);
                jlNome.setVisible(true);
                txtMaximo.setVisible(false);
                jlMaximo.setVisible(false);
                jlMinimo.setVisible(false);
                txtMinimo.setVisible(false);
                jlX.setVisible(false);
                break;
            case 1:
                jlNome.setText("ID:");
                txtNome.setSize(50, 28);
                txtNome.setVisible(true);
                jlNome.setVisible(true);
                txtMaximo.setVisible(false);
                jlMaximo.setVisible(false);
                jlMinimo.setVisible(false);
                txtMinimo.setVisible(false);
                jlX.setVisible(false);
                break;
            case 2:
                txtNome.setVisible(false);
                jlNome.setVisible(false);
                txtMaximo.setVisible(true);
                txtMinimo.setVisible(true);
                jlMaximo.setVisible(true);
                jlX.setVisible(true);
                jlMinimo.setVisible(true);
                break;
            case 3:
                txtNome.setSize(50, 28);
                jlNome.setText("Quant:");
                txtNome.setVisible(true);
                jlNome.setVisible(true);
                txtMaximo.setVisible(false);
                jlMaximo.setVisible(false);
                jlMinimo.setVisible(false);
                txtMinimo.setVisible(false);
                jlX.setVisible(false);
                break;
        }
    }//GEN-LAST:event_jcTipoDePesquisaActionPerformed

    private void jtEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtEstoqueMouseClicked
        posicao = Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), 0).toString());
        clicou = true;
        btnDescricao.setVisible(true);
        btnExcluir.setVisible(true);
        btnGerar.setVisible(true);

    }//GEN-LAST:event_jtEstoqueMouseClicked

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        switch (jcTipoDePesquisa.getSelectedIndex()) {
            case 0:
                limparTabela();
                pesquisaPorNome(txtNome.getText());
                break;
            case 1:
                limparTabela();
                pesquisaPorId(Integer.parseInt(txtNome.getText()));
                break;
            case 2:
                limparTabela();
                if (txtMinimo.getText().trim().isEmpty()) {
                    txtMinimo.setText("0");
                }
                if (txtMaximo.getText().trim().isEmpty()) {
                    txtMaximo.setText("0");
                }
                pesquisaPorValor(Double.parseDouble(txtMinimo.getText().replace(",", ".")), Double.parseDouble(txtMaximo.getText().replace(",", ".")));
                break;
            case 3:
                limparTabela();
                pesquisaPorQuantidade(Integer.parseInt(txtNome.getText()));
                break;
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
     txtNome.setText(null);
     txtMinimo.setText(null);
     txtMaximo.setText(null);
     preencherTabela();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void jtEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtEstoqueKeyPressed
        int position = Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), 0).toString());
        switch (jtEstoque.getSelectedColumn()) {
            case 1:
                main.getEstoque().get(position).setNome(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), jtEstoque.getSelectedColumn()).toString());
                JOptionPane.showMessageDialog(rootPane, "Produto Alterado");
                break;
            case 2:
                main.getEstoque().get(position).setQuantidade(Integer.parseInt(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), jtEstoque.getSelectedColumn()).toString()));
                JOptionPane.showMessageDialog(rootPane, "Produto Alterado");
                break;
            case 3:
                main.getEstoque().get(position).setValor(Double.parseDouble(jtEstoque.getValueAt(jtEstoque.getSelectedRow(), jtEstoque.getSelectedColumn()).toString().replace(",", ".")));
                JOptionPane.showMessageDialog(rootPane, "Produto Alterado");
                break;
        }
        main.atualizarBanco();
    }//GEN-LAST:event_jtEstoqueKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescricao;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGerar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcTipoDePesquisa;
    private javax.swing.JLabel jlMaximo;
    private javax.swing.JLabel jlMinimo;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlX;
    private javax.swing.JTable jtEstoque;
    private javax.swing.JTextField txtMaximo;
    private javax.swing.JTextField txtMinimo;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
private void pesquisaPorNome(String nome) {
        boolean encontrou = false;
        Integer contador = 0;
        for (Produto recebe : main.getEstoque()) {
            if (recebe.getNome().equals(nome)) {
                modelo.addRow(new String[]{contador.toString(), recebe.getNome(), Integer.toString(recebe.getQuantidade()), Double.toString(recebe.getValor())});
                encontrou = true;
            }
            contador++;
        }
        if (!encontrou) {
            modelo.addRow(new String[]{"X", "Nenhum Encontrado", "X", "X"});
        }
    }

    private void pesquisaPorId(int index) {
        if (index >= main.getEstoque().size()) {
            modelo.addRow(new String[]{"X", "Nenhum Produto encontrado", "X", "X"});
        } else {
            Produto recebe = main.getEstoque().get(index);
            modelo.addRow(new String[]{Integer.toString(index), recebe.getNome(), Integer.toString(recebe.getQuantidade()), Double.toString(recebe.getValor())});
        }
    }

    private void pesquisaPorValor(double minimo, double maximo) {
        boolean encontrou = false;
        Integer contador = 0;
        for (Produto recebe : main.getEstoque()) {
            if (recebe.getValor() >= minimo && recebe.getValor() <= maximo) {
                modelo.addRow(new String[]{contador.toString(), recebe.getNome(), Integer.toString(recebe.getQuantidade()), Double.toString(recebe.getValor())});
                encontrou = true;
            }
            contador++;
        }
        if (!encontrou) {
            modelo.addRow(new String[]{"X", "Nenhum Encontrado", "X", "X"});
        }
    }

    private void pesquisaPorQuantidade(Integer quantidade) {
        Integer contador = 0;
        boolean encontrou = false;
        for (Produto recebe : main.getEstoque()) {
            if (recebe.getQuantidade() == quantidade) {
                modelo.addRow(new String[]{contador.toString(), recebe.getNome(), Integer.toString(recebe.getQuantidade()), Double.toString(recebe.getValor())});
                encontrou = true;
            }
            contador++;
        }
        if (!encontrou) {
            modelo.addRow(new String[]{"X", "Nenhum Encontrado", "X", "X"});
        }
    }

    private void limparTabela() {
        int quantidade = modelo.getRowCount();
        for (int i = 0; i < quantidade; i++) {
            modelo.removeRow(0);
        }

    }
}
